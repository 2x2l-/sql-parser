<?xml version="1.0"?>
<!DOCTYPE project SYSTEM "build.dtd">
<project name="parser" default="all" basedir=".">

  <property file="build.properties.local"/>
  <property file="build.properties"/>

  <property name="SRC" location="src/main/java"/>
  <property name="CLASSES" value="classes"/>
  <property name="GRAMMAR" location="${SRC}/com/akiban/sql/parser/SQLGrammar.jj"/>

  <path id="compiler.class.path">
    <pathelement path="${AKIBAN_SERVER_CLASSPATH}"/>
  </path>

  <target name="all" depends="init, compile"
          description="Compile everything."/>

  <target name="init">
    <tstamp/>
    <mkdir dir="${CLASSES}"/>
  </target>

  <target name="compile">
    <javacc javacchome="${JAVACC_HOME}"
            target="${GRAMMAR}"/>
    <javac srcdir="${SRC}" 
           destdir="${CLASSES}"
           includes="**/*.java" 
           deprecation="yes"
           includeantruntime="false"
           debug="${DEBUG}">
      <classpath>
        <path refid="compiler.class.path"/>
      </classpath>
    </javac>
  </target> 

  <target name="dtd" depends="init"
          description="Create DTD file.">
    <antstructure output="build.dtd"/>
  </target>

  <path id="running.class.path">
    <path refid="compiler.class.path"/>
    <pathelement path="${CLASSES}"/>
  </path>

  <target name="enableJavaDebugger" if="JDWP_PORT">
    <property name="JAVA_DEBUGGER"
              value="-Xdebug -Xrunjdwp:server=y,suspend=y,transport=dt_socket,address=${JDWP_PORT}"/>
  </target>

  <target name="jvmargs" depends="enableJavaDebugger">
    <property name="JAVA_DEBUGGER" value=""/>
    <property name="JVMARGS" value="${JAVA_DEBUGGER}"/>
  </target>

  <target name="test-parser" depends="compile, jvmargs">
    <java classname="com.akiban.sql.test.Tester" fork="yes" failonerror="yes">
      <classpath refid="running.class.path"/>
      <arg line="-tree"/>
      <arg value="SELECT x,y FROM t WHERE z > 3.14 AND w IS NOT NULL"/>
      <arg value="INSERT INTO t1 VALUES(1, 'foo', 3 * 10)"/>
      <arg value="INSERT INTO t1 SELECT x,y,z FROM t"/>
      <arg value="CREATE TABLE t2 AS (SELECT * FROM t1) WITH NO DATA"/>
      <arg value="DELETE FROM t WHERE x in (1,2,3)"/>
    </java>
  </target> 

  <target name="test-unparser" depends="compile, jvmargs">
    <java classname="com.akiban.sql.test.Tester" fork="yes" failonerror="yes">
      <classpath refid="running.class.path"/>
      <arg line="-print"/>
      <arg value="SELECT x,y||y AS yy FROM t WHERE z > 3.14 AND w IS NOT NULL OR y LIKE 'f%'"/>
      <arg value="SELECT DISTINCT MAX(x),y||y AS yy FROM t WHERE z > 3.14 AND w IS NOT NULL OR y LIKE 'f%' GROUP BY yy HAVING yy > 'z' ORDER BY yyo NULLS FIRST"/>
      <arg value="SELECT x,y FROM t WHERE z BETWEEN 1 AND 10"/>
      <arg value="SELECT CASE WHEN x = y OR x = z THEN x WHEN y = z THEN y ELSE w END FROM t"/>
      <arg value="SELECT CAST(x AS DECIMAL(4,2)) FROM t"/>
      <!--
      <arg value="INSERT INTO t1(x,y,z) VALUES(1, X'DEADBEEF', 3 * 10)"/>
      <arg value="INSERT INTO t1 SELECT x,y,z FROM t"/>
      <arg value="DELETE FROM t t1 WHERE x in (1,2,?) AND EXISTS (SELECT * FROM t t2 WHERE t1.id &lt;> t2.id AND t1.name = t2.name)"/>
      <arg value="UPDATE t SET x = null, y = y + 1 WHERE x &lt;= 4"/>
      <arg value="CREATE TABLE t1 (i int PRIMARY KEY, s char(30) NOT NULL, z VARCHAR(128))"/>
      <arg value="CREATE TABLE t2 AS (SELECT * FROM t1) WITH DATA"/>
      -->
    </java>
  </target> 

  <target name="test-binder" depends="compile, jvmargs">
    <java classname="com.akiban.sql.test.Tester" fork="yes" failonerror="yes">
      <classpath refid="running.class.path"/>
      <arg value="-bind"/>
      <arg value="CREATE TABLE t1(x INT NOT NULL, y VARCHAR(7), z DECIMAL); CREATE table t2(w CHAR(1) NOT NULL);"/>
      <arg line="-types -tree"/>
      <!--
      <arg value="SELECT x + y + z FROM t1 WHERE x > 0 AND y > 'foo'"/>
      <arg value="SELECT CASE WHEN x = 10 THEN y WHEN x = 20 THEN 3 ELSE z END FROM t1"/>
      <arg value="SELECT COALESCE(x,y,z) FROM t1"/>
      <arg value="SELECT x,y FROM t1,t2 AS tt WHERE t1.z > tt.w"/>
      <arg value="SELECT x, x2 FROM t1, (SELECT x AS not_x, y AS x2 FROM t1) AS t2"/>
      -->
      <arg value="SELECT * FROM t1 WHERE x in (SELECT w FROM t2 WHERE w &lt;> y)"/>
    </java>
  </target> 

  <target name="test-normalizer" depends="compile, jvmargs">
    <java classname="com.akiban.sql.test.Tester" fork="yes" failonerror="yes">
      <classpath refid="running.class.path"/>
      <arg line="-boolean -print"/>
      <arg value="SELECT * FROM t WHERE ((a AND b) AND c) AND NOT d"/>
      <arg value="SELECT * FROM t WHERE (d OR e) OR ((a AND b) AND c)"/>
    </java>
  </target> 
   
  <target name="clean">
    <delete dir="${CLASSES}"/>
    <delete file="${SRC}/com/akiban/sql/parser/SQLGrammar.java"/>
  </target>

  <target name="dist">
    <tar destfile="../parser.tar.gz" compression="gzip" 
         basedir="." excludes="${CLASSES}/**/*.class"/>
  </target>

</project>
